
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # gzip  on;
    # server_tokens off;

    server {
        listen       80;
        server_name  64.225.9.101;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/share/nginx/html/OTPSystem/web/dist/web/;
            index  index.html index.htm;            
            try_files $uri /index.html;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-OTP-System' 'angular';
        }

        location /api/ {
          proxy_set_header HOST $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass_request_headers on;
          proxy_pass http://localhost:3000/api/;
          proxy_http_version 1.0;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-OTP-System' 'nodejs';
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
 
    upstream websocket {
        server 64.225.9.101:3000;
    }
 
    server {
        listen 8020;
        location /api {
            proxy_pass http://localhost:3000/api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}